This experiment corresponds to Section 4.1 in our ISSTA submission. 
We adapt the mbedTLS function, mbedtls_mpi_read_string, to the OpenSSL 
function, BN_hex2bn.
BN_hex2bn is modified to use a 8-bit signed variable to store the string
length of its input argument.
We configure FuzzBALL to detect an overflow in OpenSSL's BIGNUM 
structure.
The statically-linked precompiled binary named 'bn' 
(corresponding source code in 'bn.c') contains the wrapped target 
and inner functions.
On the FuzzBALL end, we had to turn off side-effect equivalence 
checking on memory because we were not synthesizing the memory 
substitution adaptor between the BIGNUM OpenSSL structure and 
the mbedtls_mpi mbedTLS structure. 

We drive the adaptor search using 'synth-bn.pl'.
Please note that this command requires LD_LIBRARY_PATH to have the path
to ../lib, for example, 
  LD_LIBRARY_PATH=`pwd`/../lib/:$LD_LIBRARY_PATH
The command to run this experiment is: 
  perl synth-bn.pl 1334 1335 1 1 -1 34

This produces the last line with the contents:
Final adaptors: arg=,,1,16,,, ret=,, with 2,2,complete

We provide a log file containing the output produced by this 
experiment in 'synth-bn.log'.

The last line in the output means that the adaptor is (0,0, 1,16, 0,0) 
for the arguments and (0,0) for the return value.
Thus, the 1st argument to f1 is to be passed as-is as the 1st argument 
to f2, the 2nd argument to f2 should be a constant value of 16, and 
the 1st argument to f1 should be passed as-is as the 3rd argument to 
f2. The return value adaptor is (0,0) which means the return value 
should be returned as-is.

This adaptor is different from the one mentioned in our ISSTA 
submission (Figure 2), but it is equally correct. Since f2 does not 
have the security bug (it uses the mbedTLS implementation), passing 
the 3rd argument to f2 as odd or even does not change f2's behavior. 

The adaptor reported in Figure 2 in our ISSTA submission was found, 
inspite of a FuzzBALL crash during one of the adaptor search steps. 
The FuzzBALL crash was causing the adaptor search step to report an 
adaptor with all zeros (arg adaptor = (0,0, 0,0, 0,0) return value 
adaptor = 0,0). While being able to find a correct adaptor inspite of 
a crash during the adaptor search step demonstrates the resilience of 
our technique, we believe it is more correct to report the adaptor 
found in a bug-free implementation in this artifact.

This experiment corresponds to Section 4.2 in our ISSTA submission. 

We create 3 clones of a function that computes the CRC32 checksum. Source code for these 3 clones can be found in 'obfs_clone1.c', 'obfs_clone2.c', 'obfs_clone3_51min.c' and their corresponding pre-compiled binaries are 'obfs_clone1', 'obfs_clone2', 'obfs_clone3_51min' respectively.

The source code for the 1st and 3rd clones were created using the commands present in 'obfs_clone1_cmd' and 'obfs_clone3_51min_cmd' respectively. These files specify options corresponding to various obfuscation transformations applied by tigress. The source code for the 2nd clone contains annotations which specify transformations to be applied at the LLVM IR level.

The 1st clone was compiled to a binary file 'obfs_clone1' using gcc. The 2nd and 3rd clones were compiled to binary files 'obfs_clone2' and 'obfs_clone3_51min' respectively using the clang binary generated by building Obfuscator-LLVM.

On the FuzzBALL end, we had to turn off system call equivalence checking for clones 1 and 3 because the obfuscation transformations applied by Tigress cause different system calls to be used, for example, mmap.

Command for running experiment with clone1:  perl synth-ob-clone1.pl 1332 1333 1 1 -1 15
This experiment takes about 3 minutes to finish. We provide the output generated by this experiment in synth-ob-clone1.log

Command for running experiment with clone2:  perl synth-ob-clone2.pl 1332 1333 1 1 -1 15
This experiment finishes in about 10 seconds. We provide the output generated by this experiment in synth-ob-clone2.log

In our ISSTA submission, we report synthesis of the correct adaptor for all 3 clones in less than 3 minutes. While this is true for the 1st and 2nd clones, this is not entirely correct in case of clone 3, if all the obfuscation transformations used for clone1 are also used for clone3. 

With the anti-branch analysis transformation (http://tigress.cs.arizona.edu/transformPage/docs/encodeBranches/index.html) turned on, the adaptor search fails to find the right adaptor. We provide the source code in 'obfs_clone3_notworking.c' generated by the tigress command in 'obfs_clone3_notworking_cmd', the corresponding binary file compiled by Obfuscator-LLVM's clang in 'obfs_clone3_notworking', and the perl script to drive the experiment in 'synth-ob-clone3-notworking.pl'.
The command for running this experiment: perl synth-ob-clone3-notworking.pl 1332 1333 1 1 -1 15.
We provide the output generated by this experiment in 'synth-ob-clone3-notworking.log'.
The reason for this failure is that the code introduced by anti-branch analysis tries to access addresses unsupported by FuzzBALL.

With the anti-branch analysis transformation turned off, we find the adaptor within 51 minutes.
Command for running experiment with clone3:  perl synth-ob-clone3.pl 1332 1333 1 1 -1 15
We provide the output generated by this experiment in synth-ob-clone3.log.

We can synthesize the correct adaptor in case of clone3 within 3 minutes, when we turn off the function virtualization transformation (http://tigress.cs.arizona.edu/transformPage/docs/virtualize/index.html) as well as the anti branch analysis transformation .
Command for running experiment with clone3 under 3 minutes: perl synth-ob-clone3-3min.pl 1332 1333 1 1 -1 15 
This command uses the binary 'obfs_clone3_3min', the corresponding source code for which is available in 'obfs_clone3_3min.c'. We provide the output generated by this experiment in synth-ob-clone3-3min.log.

The last line of this output is:
Final adaptors: arg=1,18446744073709551615,1,18446744073709551615,,,,1,,,,, ret=52,, with 1,1,complete

This argument substitution adaptor is to be interpreted as (1,-1, 1,-1, 0,0, 0,1, 0,0, 0,0) with the return value adaptor as (52, 0). This means that the 1st and 2nd arguments to f2 should be the constant value -1, the 3rd, 5th, 6th arguments to f2 should be the 1st argument to f1, and the 4th argument to f2 should be the 2nd argument to f1. The correctness of this adaptor can be verified from the source code in obfs_clone3_51min.c.

The Tigress command used for creating obfs_clone3_3min.c can be found in 'obfs_clone3_3min_cmd'. This command turns on Just-in-time function transformation, randomizing of arguments, insertion of 4 bogus arguments, adding diversity through duplicate operators and superoperators.
